diff --git a/components/sync/driver/profile_sync_service_unittest.cc b/components/sync/driver/profile_sync_service_unittest.cc
index 18070e022acdc50224d42ee70f9594e1970aa476..8eb2a24b2efeae867f52705551cc1773828c40e0 100644
--- a/components/sync/driver/profile_sync_service_unittest.cc
+++ b/components/sync/driver/profile_sync_service_unittest.cc
@@ -165,14 +165,18 @@ class ProfileSyncServiceTest : public ::testing::Test {
   void SetUp() override {
     base::CommandLine::ForCurrentProcess()->AppendSwitchASCII(
         switches::kSyncDeferredStartupTimeoutSeconds, "0");
+    BRAVE_SET_UP
   }
 
   void TearDown() override {
+    BRAVE_TEAR_DOWN
     // Kill the service before the profile.
     ShutdownAndDeleteService();
   }
 
-  void SignIn() { identity_test_env()->MakePrimaryAccountAvailable(kTestUser); }
+  void SignIn() { identity_test_env()->MakePrimaryAccountAvailable(kTestUser);
+    BRAVE_SIGN_IN
+  }
 
   void CreateService(ProfileSyncService::StartBehavior behavior) {
     DCHECK(!service_);
@@ -855,6 +859,7 @@ TEST_F(ProfileSyncServiceTest, SignOutRevokeAccessToken) {
             service()->GetTransportState());
 
   const CoreAccountId primary_account_id =
+      BRAVE_GET_PRIMARY_ACCOUNT
       identity_manager()->GetPrimaryAccountId();
 
   // Make sure the expected account_id was passed to the SyncEngine.
@@ -878,6 +883,7 @@ TEST_F(ProfileSyncServiceTest, SignOutRevokeAccessToken) {
       signin::PrimaryAccountMutator::ClearAccountsAction::kDefault,
       signin_metrics::SIGNOUT_TEST,
       signin_metrics::SignoutDelete::IGNORE_METRIC);
+  BRAVE_SIGN_OUT
   EXPECT_TRUE(service()->GetAccessTokenForTest().empty());
 }
 #endif
